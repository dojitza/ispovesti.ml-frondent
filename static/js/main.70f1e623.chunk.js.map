{"version":3,"sources":["constants.js","Ispovest.js","Pagination.js","helpers.js","IspovestGenerationModal.js","Arena.js","Ispovesti.js","Landing.js","App.js","index.js"],"names":["constants","Ispovest","props","ispovest","likes","dislikes","handleDislikeClick","handleLikeClick","extraCssClass","Row","style","margin","className","Col","text","xl","lg","md","sm","xs","paddingRight","variant","onClick","id","disabled","timesLiked","backgroundColor","Math","floor","random","length","timesDisliked","authorName","Pagination","page","setPage","waitingForAsync","reachedEndFlag","pageIndicatorClickHandler","disableRight","disableLeft","marginTop","marginBottom","display","justifyContent","fontSize","color","background","borderRadius","padding","cursor","pointerEvents","Spinner","animation","role","textAlign","lineHeight","paddingLeft","toHHMMSS","string","sec_num","parseInt","hours","minutes","seconds","IspovestGenerationModal","updateData","showGenerationModal","setShowGenerationModal","useState","showIntro","setShowIntro","generatedIspovest","setGeneratedIspovest","generationState","setGenerationState","queuePosition","setQueuePosition","prefix","setPrefix","setAuthorName","setWaitingForPublish","eta","setEta","waitingForGeneration","useEffect","intervalRef","setInterval","tick","clearInterval","pollForGeneratedIspovest","sendGenerateRequest","a","fetch","method","headers","body","JSON","stringify","isError","response","json","responseJson","console","log","publishIspovest","ispovestId","ok","alert","Modal","size","centered","show","onHide","backdrop","keyboard","Body","title","type","maxLength","value","onChange","event","target","renderIspovestDivText","window","confirm","Arena","setUserData","ispovesti","setIspovesti","setWaitingForAsync","waitingForUserData","setWaitingForUserData","timeLeftForSubmit","setTimeLeftForSubmit","seedrandom","localStorage","getItem","global","fetchIspovesti","fetchUserData","userData","fetchData","data","lastPublishTime","round","Date","getTime","handleReactionClick","reaction","newIspovesti","ito","find","alreadyReacted","parse","map","key","Ispovesti","setWaitingForAysnc","reactedInRuntime","Landing","Container","to","href","App","Jumbotron","flexDirection","alignItems","width","path","setItem","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70f1e623.chunk.js","sourcesContent":["export const constants = {\r\n  API_ROOT: \"http://dojitza.ddns.net:8100/api/v1/\",\r\n  LIKE_VARIATIONS: [\r\n    \"Odobravam\",\r\n    \"To miško\",\r\n    \"To brate\",\r\n    \"Mnogo dobro\",\r\n    \"Cepaj mala\",\r\n    \"Sočno\",\r\n  ],\r\n  DISLIKE_VARIATIONS: [\"Osuđujem\", \"Loše sestro\", \"Slabo jarane\", \"Mizerija\"],\r\n  SUPERLIKE_VARIATIONS: [\r\n    \"Brateeeeeeeeeeeeee\",\r\n    \"E pocepo si ga skroz svaka cast\",\r\n    \"Prosto ne mogu da verujem\",\r\n    \"Najjača dosad\",\r\n  ],\r\n  SUBMISSION_THRESHOLD_SECONDS: 300,\r\n  GENERATION_ESTIMATE_SECONDS: 90,\r\n  GENERATION_STATE_INITIAL: 0,\r\n  GENERATION_STATE_GENERATING: 1,\r\n  GENERATION_STATE_GENERATED: 2,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Row, Col } from \"react-bootstrap\";\r\nimport \"./Ispovest.css\";\r\n\r\nexport function Ispovest(props) {\r\n  const {\r\n    ispovest,\r\n    likes,\r\n    dislikes,\r\n    handleDislikeClick,\r\n    handleLikeClick,\r\n    extraCssClass,\r\n  } = props;\r\n\r\n  return (\r\n    <Row style={{ margin: 5 }} className={`ispovest ${extraCssClass}`}>\r\n      <Col>\r\n        <Col className=\"ispovestText\">{ispovest.text}</Col>\r\n        <Row className=\"reactionContainer\">\r\n          <Col\r\n            className=\"reactionCol\"\r\n            xl=\"auto\"\r\n            lg=\"auto\"\r\n            md=\"auto\"\r\n            sm=\"auto\"\r\n            xs=\"auto\"\r\n            style={{ paddingRight: 5 }}\r\n          >\r\n            <button\r\n              className=\"button\"\r\n              variant=\"dark\"\r\n              onClick={() => {\r\n                handleLikeClick(ispovest.id);\r\n              }}\r\n              disabled={ispovest.timesLiked > 0}\r\n              style={\r\n                ispovest.timesLiked > 0\r\n                  ? { backgroundColor: \"rgba(50, 50, 50, 0.5)\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {likes[Math.floor(Math.random() * likes.length)]}\r\n            </button>\r\n            <span className=\"reactionCount\">{ispovest.likes}</span>\r\n          </Col>\r\n          <Col\r\n            className=\"reactionCol \"\r\n            xl=\"auto\"\r\n            lg=\"auto\"\r\n            md=\"auto\"\r\n            sm=\"auto\"\r\n            xs=\"auto\"\r\n          >\r\n            <button\r\n              className=\"button\"\r\n              variant=\"dark\"\r\n              onClick={() => {\r\n                handleDislikeClick(ispovest.id);\r\n              }}\r\n              disabled={ispovest.timesDisliked > 0}\r\n              style={\r\n                ispovest.timesDisliked > 0\r\n                  ? { backgroundColor: \"rgba(50, 50, 50, 0.5)\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {dislikes[Math.floor(Math.random() * dislikes.length)]}\r\n            </button>\r\n            <span className=\"reactionCount\">{ispovest.dislikes}</span>\r\n          </Col>\r\n          <Col className=\"reactionCol\">\r\n            <div className=\"authorNameContainer\">\r\n              <span className=\"authorName\">{ispovest.authorName}</span>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { IoMdArrowRoundForward, IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport \"./Pagination.css\";\r\n\r\nexport const Pagination = (props) => {\r\n  const {\r\n    page,\r\n    setPage,\r\n    waitingForAsync,\r\n    reachedEndFlag,\r\n    pageIndicatorClickHandler,\r\n  } = props;\r\n\r\n  const disableRight = reachedEndFlag || waitingForAsync;\r\n  const disableLeft = page === 0 || waitingForAsync;\r\n\r\n  return (\r\n    <Row style={{ marginTop: 20, marginBottom: 20 }}>\r\n      <Col\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <IoMdArrowRoundBack\r\n          style={{\r\n            fontSize: 80,\r\n            color: disableLeft ? \"grey\" : \"whitesmoke\",\r\n            background: \"rgba(0,0,0,0.66)\",\r\n            borderRadius: 10,\r\n            padding: 10,\r\n            cursor: \"pointer\",\r\n            pointerEvents: disableLeft ? \"none\" : null,\r\n          }}\r\n          onClick={() => setPage(page - 1)}\r\n          disabled={waitingForAsync}\r\n        />\r\n      </Col>\r\n      <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div className=\"pageIndicator\" onClick={pageIndicatorClickHandler}>\r\n          {waitingForAsync ? (\r\n            <Spinner style={{ padding: 30 }} animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 80,\r\n                color: \"whitesmoke\",\r\n                background: \"rgba(0,0,0,0.66)\",\r\n                borderRadius: 10,\r\n                lineHeight: 1,\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n              }}\r\n            >\r\n              {page + 1}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Col>\r\n      <Col\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <IoMdArrowRoundForward\r\n          style={{\r\n            fontSize: 80,\r\n            color: disableRight ? \"grey\" : \"whitesmoke\",\r\n            background: \"rgba(0,0,0,0.66)\",\r\n            borderRadius: 10,\r\n            padding: 10,\r\n            cursor: \"pointer\",\r\n            pointerEvents: disableRight ? \"none\" : null,\r\n          }}\r\n          onClick={() => setPage(page + 1)}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","export const toHHMMSS = function (string) {\r\n  var sec_num = parseInt(string, 10); // don't forget the second param\r\n  var hours = Math.floor(sec_num / 3600);\r\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n  var seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n  if (hours < 10) {\r\n    hours = \"0\" + hours;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + minutes;\r\n  }\r\n  if (seconds < 10) {\r\n    seconds = \"0\" + seconds;\r\n  }\r\n  return hours + \":\" + minutes + \":\" + seconds;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Row, Col, Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { constants } from \"./constants\";\r\nimport { toHHMMSS } from \"./helpers\";\r\n\r\nexport function IspovestGenerationModal(props) {\r\n  const { updateData, showGenerationModal, setShowGenerationModal } = props;\r\n  const [showIntro, setShowIntro] = useState(true);\r\n  const [generatedIspovest, setGeneratedIspovest] = useState({\r\n    id: null,\r\n    text: null,\r\n  });\r\n  const [generationState, setGenerationState] = useState(\r\n    constants.GENERATION_STATE_INITIAL\r\n  );\r\n  const [queuePosition, setQueuePosition] = useState();\r\n  const [prefix, setPrefix] = useState(\"\");\r\n  const [authorName, setAuthorName] = useState(\"\");\r\n  const [waitingForPublish, setWaitingForPublish] = useState(false);\r\n  const [eta, setEta] = useState(constants.GENERATION_ESTIMATE_SECONDS);\r\n  const waitingForGeneration =\r\n    generationState === constants.GENERATION_STATE_GENERATING;\r\n\r\n  useEffect(() => {\r\n    const intervalRef = setInterval(() => {\r\n      tick();\r\n    }, 1000);\r\n    return () => clearInterval(intervalRef);\r\n  });\r\n\r\n  const tick = () => {\r\n    if (waitingForGeneration) {\r\n      setEta(eta - 1);\r\n      if (\r\n        generationState === constants.GENERATION_STATE_GENERATING &&\r\n        (eta <= 1 || eta % 10 === 0)\r\n      ) {\r\n        pollForGeneratedIspovest();\r\n      }\r\n      if (eta <= 1) {\r\n        setEta(9);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendGenerateRequest = async (prefix) => {\r\n    setGeneratedIspovest({ id: null, text: null });\r\n    const response = await fetch(`${constants.API_ROOT}/generateIspovest`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ prefix: prefix }),\r\n    });\r\n    if (!response.isError) {\r\n      setGenerationState(constants.GENERATION_STATE_GENERATING);\r\n      pollForGeneratedIspovest();\r\n    }\r\n  };\r\n\r\n  const pollForGeneratedIspovest = async () => {\r\n    const response = await fetch(`${constants.API_ROOT}/generateIspovest`);\r\n    if (!response.isError) {\r\n      const responseJson = await response.json();\r\n      console.log(responseJson);\r\n      if (responseJson.id) {\r\n        setGeneratedIspovest(responseJson);\r\n        setGenerationState(constants.GENERATION_STATE_GENERATED);\r\n        setEta(constants.GENERATION_ESTIMATE_SECONDS);\r\n      } else {\r\n        if (responseJson.queuePosition != queuePosition) {\r\n          setEta(\r\n            (responseJson.queuePosition + 1) *\r\n              constants.GENERATION_ESTIMATE_SECONDS\r\n          );\r\n          setQueuePosition(responseJson.queuePosition);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const publishIspovest = async (id, authorName) => {\r\n    setWaitingForPublish(true);\r\n    const response = await fetch(`${constants.API_ROOT}/publishIspovest`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        ispovestId: id,\r\n        authorName: authorName,\r\n      }),\r\n    });\r\n    if (response.ok) {\r\n      setShowGenerationModal(false);\r\n      updateData();\r\n    } else {\r\n      alert(\"Došlo je do greške, pokušajte opet opet\");\r\n    }\r\n    setWaitingForPublish(false);\r\n  };\r\n\r\n  const renderIspovestDivText = (generationState) => {\r\n    switch (generationState) {\r\n      case constants.GENERATION_STATE_INITIAL:\r\n        return \"Ovde će da se prikaže generisovana ispovest\";\r\n      case constants.GENERATION_STATE_GENERATING:\r\n        return (\r\n          <Spinner style={{ padding: 30 }} animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        );\r\n      case constants.GENERATION_STATE_GENERATED:\r\n        return generatedIspovest.text;\r\n      default:\r\n        return \"Ovde će da se prikaže generisovana ispovest\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"m\"\r\n      centered=\"true\"\r\n      show={showGenerationModal}\r\n      onHide={() => setShowGenerationModal(false)}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      className=\"my-modal\"\r\n      animation={true}\r\n    >\r\n      <Modal.Body>\r\n        {showIntro ? (\r\n          <>\r\n            <Row className=\"modalRow ispovestText\">\r\n              Dobrodošli u generiranje ispovesti. Na idućem ekranu Upišite\r\n              početak ispovesti ako želite (do 20 znakova!) i kliknite\r\n              generiraj. Zbog velikih zahtjeva na sistem generiranje ispovesti\r\n              traje do {constants.GENERATION_ESTIMATE_SECONDS / 60}min i ako je\r\n              aktivno mnogo korisnika bit ćete stavljeni u red za čekanje.\r\n              Jednom kada se ispovest generira moći ćete da ju prihvatite ili\r\n              generirate novu, sve dok ne budete zadovoljni sa svojom ispovesti.\r\n              Jednom kada ste zadovoljni, opcionalno upišite svoje ime i\r\n              kliknite prihvati. Ispovest će se objaviti u generiraj sekciji gde\r\n              će ući u konkurenciju za objavljivanje na glavnoj listi i našim\r\n              ostalim platformama (ig, fb). Ispovest možete da objavite jednom\r\n              svakih {constants.SUBMISSION_THRESHOLD_SECONDS / 60} min.\r\n            </Row>\r\n            <Row className=\"modalRow buttonRow\">\r\n              <button\r\n                title=\"Može\"\r\n                className=\"button continueButton mozeButton\"\r\n                onClick={() => setShowIntro(false)}\r\n              >\r\n                Može\r\n              </button>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row className=\"modalRow modalText\">Početak ispovesti</Row>\r\n            <Row className=\"modalRow modalInput\">\r\n              <input\r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                value={prefix}\r\n                onChange={(event) => setPrefix(event.target.value)}\r\n              />\r\n            </Row>\r\n            <Row className=\"modalRow\">\r\n              <button\r\n                title=\"Generiraj\"\r\n                className={`button continueButton ${\r\n                  waitingForGeneration ? \"disabledButton\" : \"\"\r\n                }`}\r\n                onClick={() => sendGenerateRequest(prefix)}\r\n                disabled={waitingForGeneration}\r\n              >\r\n                Generiraj\r\n              </button>\r\n            </Row>\r\n            <Row className=\"modalRow ispovestText generatedIspovestText\">\r\n              {renderIspovestDivText(generationState)}\r\n            </Row>\r\n            {queuePosition >= 0 && !generatedIspovest.id && (\r\n              <Row className=\"modalRow queueInfoText\">\r\n                Vaša ispovest je {queuePosition + 1}. u redu čekanja, otprilike\r\n                vreme do završetka: {toHHMMSS(eta)}\r\n              </Row>\r\n            )}\r\n            <Row className=\"modalRow modalText\">Vaše ime</Row>\r\n            <Row className=\"modalRow modalInput\">\r\n              <input\r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                value={authorName}\r\n                onChange={(event) => setAuthorName(event.target.value)}\r\n              />\r\n            </Row>\r\n            <Row className=\"modalRow\">\r\n              <Col className=\"modalCol\">\r\n                <button\r\n                  title=\"Objavi\"\r\n                  className={`button continueButton ${\r\n                    waitingForGeneration || generatedIspovest.id === null\r\n                      ? \"disabledButton\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    const r = window.confirm(\r\n                      \"Da li ste sigurni da želite objaviti ispovest? Ispovest možete da objavite jednom svakih \" +\r\n                        constants.SUBMISSION_THRESHOLD_SECONDS / 3600 +\r\n                        \" časova\"\r\n                    );\r\n                    if (r == true) {\r\n                      publishIspovest(generatedIspovest.id, authorName);\r\n                      setShowGenerationModal(false);\r\n                    }\r\n                  }}\r\n                  disabled={\r\n                    waitingForGeneration || generatedIspovest.id === null\r\n                  }\r\n                >\r\n                  Objavi\r\n                </button>\r\n              </Col>\r\n              <Col className=\"modalCol\">\r\n                <button\r\n                  title=\"Odustani\"\r\n                  className=\"button continueButton\"\r\n                  onClick={() => {\r\n                    const r = window.confirm(\r\n                      \"Da li ste sigurni da želite odustati?\"\r\n                    );\r\n                    if (r == true) {\r\n                      setShowGenerationModal(false);\r\n                    }\r\n                  }}\r\n                >\r\n                  Odustani\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { constants } from \"./constants\";\r\nimport seedrandom from \"seedrandom\";\r\nimport { Ispovest } from \"./Ispovest\";\r\nimport { Pagination } from \"./Pagination.js\";\r\nimport { IspovestGenerationModal } from \"./IspovestGenerationModal\";\r\nimport \"./Arena.css\";\r\nimport { toHHMMSS } from \"./helpers\";\r\n\r\nexport function Arena() {\r\n  const [userData, setUserData] = useState(null);\r\n  const [ispovesti, setIspovesti] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [waitingForAsync, setWaitingForAsync] = useState(false);\r\n  const [waitingForUserData, setWaitingForUserData] = useState(true);\r\n  const [showGenerationModal, setShowGenerationModal] = useState(false);\r\n  const [timeLeftForSubmit, setTimeLeftForSubmit] = useState(0);\r\n  seedrandom(localStorage.getItem(\"randomSeed\"), { global: true });\r\n\r\n  const likes = constants.LIKE_VARIATIONS;\r\n  const dislikes = constants.DISLIKE_VARIATIONS;\r\n\r\n  const getGenerateButtonText = () =>\r\n    timeLeftForSubmit > 0\r\n      ? toHHMMSS(timeLeftForSubmit)\r\n      : \"Generiraj novu ispovest\";\r\n\r\n  const getGenerateButtonTitle = () =>\r\n    timeLeftForSubmit > 0\r\n      ? \"Vreme preostalo do kad opet možete da objavite ispovest\"\r\n      : \"Generiraj novu ispovest\";\r\n\r\n  const fetchIspovesti = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${constants.API_ROOT}/arenaIspovesti?page=${page}`\r\n      );\r\n      const ispovesti = await response.json();\r\n      setIspovesti(ispovesti);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const tick = () => {\r\n    timeLeftForSubmit > 0 && setTimeLeftForSubmit(timeLeftForSubmit - 1);\r\n  };\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch(`${constants.API_ROOT}/user`);\r\n      const userData = await response.json();\r\n      setUserData(userData);\r\n\r\n      return userData;\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setWaitingForUserData(false);\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setWaitingForAsync(true);\r\n    const ispovesti = await fetchIspovesti();\r\n    const userData = await fetchUserData();\r\n    setWaitingForAsync(false);\r\n    return { ispovesti: ispovesti, userData: userData };\r\n  };\r\n\r\n  const updateData = async () => {\r\n    const data = await fetchData();\r\n    const userData = data.userData;\r\n\r\n    setTimeLeftForSubmit(\r\n      (userData?.lastPublishTime | 0) +\r\n        constants.SUBMISSION_THRESHOLD_SECONDS -\r\n        Math.round(new Date().getTime() / 1000)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    const intervalRef = setInterval(() => {\r\n      tick();\r\n    }, 1000);\r\n    return () => clearInterval(intervalRef);\r\n  });\r\n\r\n  const handleReactionClick = (ispovestId, reaction) => {\r\n    setWaitingForAsync(true);\r\n    fetch(`${constants.API_ROOT}/arenaIspovesti/${ispovestId}/putReaction`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(reaction),\r\n    });\r\n    const newIspovesti = ispovesti;\r\n    const ito = newIspovesti.find((ispovest) => ispovest.id === ispovestId);\r\n    const alreadyReacted = ito.timesLiked + ito.timesDisliked > 0;\r\n    if (reaction === \"like\") {\r\n      ito.timesLiked += 1;\r\n      ito.likes += 1;\r\n      if (alreadyReacted) {\r\n        ito.timesDisliked -= 1;\r\n        ito.dislikes -= 1;\r\n      }\r\n    } else if (reaction === \"dislike\") {\r\n      ito.timesDisliked += 1;\r\n      ito.dislikes += 1;\r\n      if (alreadyReacted) {\r\n        ito.timesLiked -= 1;\r\n        ito.likes -= 1;\r\n      }\r\n    }\r\n    setIspovesti(JSON.parse(JSON.stringify(newIspovesti)));\r\n    setWaitingForAsync(false);\r\n  };\r\n\r\n  const handleLikeClick = (ispovestId) => {\r\n    handleReactionClick(ispovestId, \"like\");\r\n  };\r\n\r\n  const handleDislikeClick = (ispovestId) => {\r\n    handleReactionClick(ispovestId, \"dislike\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IspovestGenerationModal\r\n        updateData={updateData}\r\n        showGenerationModal={showGenerationModal}\r\n        setShowGenerationModal={setShowGenerationModal}\r\n      />\r\n      <div>\r\n        <div className=\"ispovestGenerationModalButtonContainer\">\r\n          <button\r\n            title={getGenerateButtonTitle(timeLeftForSubmit)}\r\n            className={\r\n              \"ispovestGenerationModalButton \" +\r\n              (timeLeftForSubmit > 0\r\n                ? \"ispovestGenerationModalButtonDisabled\"\r\n                : \"\")\r\n            }\r\n            variant=\"dark\"\r\n            onClick={() => setShowGenerationModal(true)}\r\n            disabled={timeLeftForSubmit > 0 || waitingForUserData}\r\n          >\r\n            <span>\r\n              {waitingForUserData ? (\r\n                <Spinner\r\n                  style={{ padding: 30 }}\r\n                  animation=\"border\"\r\n                  role=\"status\"\r\n                >\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n              ) : (\r\n                getGenerateButtonText(timeLeftForSubmit)\r\n              )}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <Pagination\r\n          page={page}\r\n          setPage={setPage}\r\n          waitingForAsync={waitingForAsync}\r\n          reachedEndFlag={ispovesti.length < 10}\r\n          pageIndicatorClickHandler={updateData}\r\n        />\r\n        {ispovesti?.map((ispovest) => (\r\n          <Ispovest\r\n            extraCssClass=\"arenaIspovest\"\r\n            key={ispovest.id}\r\n            ispovest={ispovest}\r\n            likes={likes}\r\n            dislikes={dislikes}\r\n            handleLikeClick={handleLikeClick}\r\n            handleDislikeClick={handleDislikeClick}\r\n          />\r\n        ))}\r\n        <Pagination\r\n          page={page}\r\n          setPage={setPage}\r\n          waitingForAsync={waitingForAsync}\r\n          reachedEndFlag={ispovesti.length < 10}\r\n          pageIndicatorClickHandler={updateData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { constants } from \"./constants\";\r\nimport { Ispovest } from \"./Ispovest\";\r\nimport seedrandom from \"seedrandom\";\r\nimport { Pagination } from \"./Pagination.js\";\r\n\r\nexport function Ispovesti() {\r\n  const [ispovesti, setIspovesti] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [waitingForAsync, setWaitingForAysnc] = useState(false);\r\n  seedrandom(localStorage.getItem(\"randomSeed\"), { global: true });\r\n\r\n  const likes = constants.LIKE_VARIATIONS;\r\n  const dislikes = constants.DISLIKE_VARIATIONS;\r\n\r\n  const fetchData = async () => {\r\n    setWaitingForAysnc(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${constants.API_ROOT}/ispovesti?page=${page}`\r\n      );\r\n      const ispovesti = await response.json();\r\n      setIspovesti(ispovesti);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setWaitingForAysnc(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [page]);\r\n\r\n  const handleReactionClick = (ispovestId, reaction) => {\r\n    setWaitingForAysnc(true);\r\n    fetch(`${constants.API_ROOT}/ispovesti/${ispovestId}/putReaction`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(reaction),\r\n    });\r\n    const newIspovesti = ispovesti;\r\n    const ito = newIspovesti.find((ispovest) => ispovest.id === ispovestId);\r\n    const alreadyReacted = ito.timesLiked + ito.timesDisliked > 0;\r\n    if (reaction === \"like\") {\r\n      ito.timesLiked += 1;\r\n      ito.likes += 1;\r\n      if (alreadyReacted) {\r\n        ito.timesDisliked -= 1;\r\n        ito.dislikes -= 1;\r\n      }\r\n    } else if (reaction === \"dislike\") {\r\n      ito.timesDisliked += 1;\r\n      ito.dislikes += 1;\r\n      if (alreadyReacted) {\r\n        ito.timesLiked -= 1;\r\n        ito.likes -= 1;\r\n      }\r\n    }\r\n    ito.reactedInRuntime = true;\r\n    console.log(ito);\r\n    setIspovesti(JSON.parse(JSON.stringify(newIspovesti)));\r\n    setWaitingForAysnc(false);\r\n  };\r\n\r\n  const handleLikeClick = (ispovestId) => {\r\n    handleReactionClick(ispovestId, \"like\");\r\n  };\r\n\r\n  const handleDislikeClick = (ispovestId) => {\r\n    handleReactionClick(ispovestId, \"dislike\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        page={page}\r\n        setPage={setPage}\r\n        waitingForAsync={waitingForAsync}\r\n        reachedEndFlag={ispovesti.length < 10}\r\n        pageIndicatorClickHandler={fetchData}\r\n      />\r\n      {ispovesti?.map((ispovest) => (\r\n        <Ispovest\r\n          key={ispovest.id}\r\n          ispovest={ispovest}\r\n          likes={likes}\r\n          dislikes={dislikes}\r\n          handleLikeClick={handleLikeClick}\r\n          handleDislikeClick={handleDislikeClick}\r\n        />\r\n      ))}\r\n      <Pagination\r\n        page={page}\r\n        setPage={setPage}\r\n        waitingForAsync={waitingForAsync}\r\n        reachedEndFlag={ispovesti.length < 10}\r\n        pageIndicatorClickHandler={fetchData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Landing.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function Landing() {\r\n  return (\r\n    <Container className=\"landingContainer\">\r\n      <Col>\r\n        <Row className=\"landingRow\">\r\n          <Col className=\"landingCol\">\r\n            <Link to=\"/generated\" className=\"landingButton generiraj\">\r\n              Generiraj nove i sudi\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"landingCol\">\r\n            <Link to=\"/published\" className=\"landingButton citaj\">\r\n              Čitaj stare\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"landingRow\">\r\n          <Col className=\"landingInfo\">\r\n            Dobrodošli na ispovesti.ml. Na ovom sajtu pronaći ćete ispovesti\r\n            generirane generativnim tekstualnim modelom pod imenom{\" \"}\r\n            <a href=\"https://openai.com/blog/better-language-models/\">gpt-2</a>{\" \"}\r\n            - naučenom nad skupom od 120 hiljada ispovesti preuzetih sa sajta{\" \"}\r\n            <a href=\"http://ispovesti.com\">ispovesti.com</a>. Naš rad s modelom\r\n            sastojao se od prikupljanja originalnog materijala (ispovesti), te\r\n            treniranja modela kako bi upio njihovu bit. Rezultirajući model\r\n            generirao je sve ispovesti koje se nalaze na ovom sajtu. Više o\r\n            projektu možete pročitati na sledećem{\" \"}\r\n            <a href=\"https://dojitza.github.io/projects/Ispovesti.ml/\">linku</a>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Arena } from \"./Arena\";\r\nimport { Ispovesti } from \"./Ispovesti\";\r\nimport { Landing } from \"./Landing\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"content\">\r\n        <Jumbotron\r\n          style={{\r\n            backgroundColor: \"rgba(0,0,0,0)\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginBottom: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            className=\"mainLink\"\r\n            to=\"/\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              backgroundColor: \"rgba(0,0,0,0.66)\",\r\n              color: \"whitesmoke\",\r\n              fontSize: 50,\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              borderRadius: 10,\r\n              width: 300,\r\n            }}\r\n          >\r\n            Ispovesti.ml\r\n          </Link>\r\n        </Jumbotron>\r\n\r\n        <Switch>\r\n          <Route path=\"/published\">\r\n            <Container className=\"body\" style={{ marginTop: -30 }}>\r\n              <Row>\r\n                <Col>\r\n                  <Ispovesti />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Route>\r\n          <Route path=\"/generated\">\r\n            <Container className=\"body\" style={{ marginTop: -30 }}>\r\n              <Row>\r\n                <Col>\r\n                  <Arena />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Landing />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nlocalStorage.setItem(\"randomSeed\", Date.now());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}